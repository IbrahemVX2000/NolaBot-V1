const config = {
  name: "xo",
  aliases: ["XO", "Xo", "xO"],
  description: "العب اكس او مع صديقك",
  usage: "[منشن]",
  cooldown: 3,
  permissions: [0, 1, 2],
  isAbsolute: false,
  isHidden: true,
  credits: "IbrahemVX2000",
};

async function onCall({ message, args, getLang, extra, data, userPermissions, prefix }) {
  const {threadID, senderID,mentions }=message;
  const { Users, Threads } = global.controllers;
  const mention =Object.keys(mentions);
  // const mention = message.mentions;

  if (args[0] == "الغاء") {
    if (!global.game.hasOwnProperty(threadID) || !global.game[threadID].on) {
      message.reply("لا يوجد العاب في المجموعة");
    } else {
      if (senderID == global.game[threadID].player1.id || senderID == global.game[threadID].player2.id) {
        if (senderID == global.game[threadID].player1.id) {
          message.reply({
            body: `فاز ${global.game[threadID].player2.name}.`,
            mentions: [
              {
                tag: global.game[threadID].player1.name,
                id: global.game[threadID].player1.id,
              },
              {
                tag: global.game[threadID].player2.name,
                id: global.game[threadID].player2.id,
              },
            ],
          });
        } else {
          message.reply({
            body: `الفائز هو ${global.game[threadID].player1.name}.`,
            mentions: [
              {
                tag: global.game[threadID].player1.name,
                id: global.game[threadID].player1.id,
              },
              {
                tag: global.game[threadID].player2.name,
                id: global.game[threadID].player2.id,
              },
            ],
          });
        }
        global.game[threadID].on = false;
      } else {
        message.reply("لايوجد العاب في المجموعة");
      }
    }
  } else {
    if (mention.length == 0) {
      return message.reply("لانهاء لعة جرية يرجى كتابة xo الغاء\nللعب برجى الاشارة للخصم");
    }
    if (!global.game.hasOwnProperty(threadID) || !global.game[threadID].on) {
       const player1Info = await Users.getInfo(mention[0]);
        const player2Info = await Users.getInfo(senderID);

        if (!player1Info || !player2Info) {
          message.reply("لا يمكن الحصول على معلومات المستخدمين.");
          return;
        }

        global.game[threadID] = {
          on: true,
          board: "🔲🔲🔲\n🔲🔲🔲\n🔲🔲🔲",
          bid: "",
          board2: "123456789",
          avcell: ["1", "2", "3", "4", "5", "6", "7", "8", "9"],
          turn: mention[0],
          player1: { id: mention[0], name: player1Info.name },
          player2: { id: senderID, name: player2Info.name },
          bidd: "❌",
          bid: "",
          ttrns: [],
          counting: 0,
        };
      message.reply(global.game[threadID].board, (err, info) => {
        global.game[threadID].bid = info.messageID;
        global.fff.push(info.messageID);
      });
    } else {
      message.reply("هنالك لعبة جارية يرجى الغاء اللعبه اولا");
    }
  }
 onreply:
  if (message.type == "message_reply" && global.game[threadID] && global.game[threadID].on) {
    if (message.messageReply.messageID === global.game[threadID].bid) {
      console.log("bal");
      if (global.game[threadID].turn === senderID) {
        console.log("sal");
        if (["1", "2", "3", "4", "5", "6", "7", "8", "9"].includes(message.body)) {
          if (global.game[threadID].avcell.includes(message.body)) {
            global.game[threadID].avcell.splice(global.game[threadID].avcell.indexOf(message.body), 1);

            let input2 = message.body * 2;

            global.game[threadID].ttrns.map((e) => {
              if (e < message.body) {
                input2--;
              }
            });

            if (["4", "5", "6"].includes(message.body)) {
              input2++;
            } else if (["7", "8", "9"].includes(message.body)) {
              input2 += 2;
            }

            global.game[threadID].board = global.game[threadID].board.replaceAt("🔲", global.game[threadID].bidd, input2 - 2);
            global.game[threadID].board2 = global.game[threadID].board2.replace(message.body, global.game[threadID].bidd);

            message.reply(global.game[threadID].board, (err, infos) => {
              global.game[threadID].bid = infos.messageID;
              global.fff.push(infos.messageID);
            });

            let winncomb = [
                global.game[threadID].board2[0] === global.game[threadID].bidd &&
                global.game[threadID].board2[1] === global.game[threadID].bidd &&
                global.game[threadID].board2[2] === global.game[threadID].bidd,
                global.game[threadID].board2[3] === global.game[threadID].bidd &&
                global.game[threadID].board2[4] === global.game[threadID].bidd &&
                global.game[threadID].board2[5] === global.game[threadID].bidd,
                global.game[threadID].board2[6] === global.game[threadID].bidd &&
                global.game[threadID].board2[7] === global.game[threadID].bidd &&
                global.game[threadID].board2[8] === global.game[threadID].bidd,
                global.game[threadID].board2[0] === global.game[threadID].bidd &&
                global.game[threadID].board2[3] === global.game[threadID].bidd &&
                global.game[threadID].board2[6] === global.game[threadID].bidd,
                global.game[threadID].board2[1] === global.game[threadID].bidd &&
                global.game[threadID].board2[4] === global.game[threadID].bidd &&
                global.game[threadID].board2[7] === global.game[threadID].bidd,
                global.game[threadID].board2[2] === global.game[threadID].bidd &&
                global.game[threadID].board2[5] === global.game[threadID].bidd &&
                global.game[threadID].board2[8] === global.game[threadID].bidd,
                global.game[threadID].board2[0] === global.game[threadID].bidd &&
                global.game[threadID].board2[4] === global.game[threadID].bidd &&
                global.game[threadID].board2[8] === global.game[threadID].bidd,
                global.game[threadID].board2[2] === global.game[threadID].bidd &&
                global.game[threadID].board2[4] === global.game[threadID].bidd &&
                global.game[threadID].board2[6] === global.game[threadID].bidd,
            ];

            let winncomb2 = [
              [1, 2, 3],
              [4, 5, 6],
              [7, 8, 9],
              [1, 4, 7],
              [2, 5, 8],
              [3, 6, 9],
              [1, 5, 9],
              [3, 5, 7],
            ];

            let cbid = { "❌": "❎", "⭕": " 🚫" };

            if (winncomb.includes(true)) {
              message.unsend(message.messageReply.messageID);

              let winl = winncomb2[winncomb.indexOf(true)];

              winl.forEach((fn) => {
                let input2 = fn * 2;

                global.game[threadID].ttrns.map((e) => {
                  if (e < fn) {
                    input2--;
                  }
                });

                if (["4", "5", "6"].includes(fn)) {
                  input2++;
                } else if (["7", "8", "9"].includes(fn)) {
                  input2 += 2;
                }

                global.game[threadID].board = global.game[threadID].board.replaceAt(global.game[threadID].bidd, "✅", input2 - 2);
              });

              message.reply();

              if (global.game[threadID].turn === global.game[threadID].player1.id) {
                setTimeout(function () {
                  message.reply({
                    body: `${global.game[threadID].player1.name} الفائز `,
                    mentions: [
                      {
                        tag: global.game[threadID].player1.name,
                        id: global.game[threadID].player1.id,
                      },
                    ],
                  });
                }, 1000);
              } else {
                setTimeout(function () {
                  message.reply({
                    body: `${global.game[threadID].player2.name} هو الفائز `,
                    mentions: [
                      {
                        tag: global.game[threadID].player2.name,
                        id: global.game[threadID].player2.id,
                      },
                    ],
                  });
                }, 1000);
              }
              global.game[threadID].on = false;
            } else if (global.game[threadID].counting === 8) {
              setTimeout(function () {
                message.reply("تعادل!");
              }, 1000);
              global.game[threadID].on = false;
            } else {
              global.game[threadID].counting += 1;
              message.unsend(message.messageReply.messageID);
              global.game[threadID].ttrns.push(message.body);
              if (global.game[threadID].turn === global.game[threadID].player1.id) {
                global.game[threadID].turn = global.game[threadID].player2.id;
                global.game[threadID].bidd = "⭕";
              } else {
                global.game[threadID].turn = global.game[threadID].player1.id;
                global.game[threadID].bidd = "❌";
              }
            }
          } else {
            message.reply("شدسوي؟");
          }
        } else {
          message.reply("رد برقم مربع صالح فقط");
        }
      } else {
        message.reply("هذا ليس بدورك");
      }
    }
  }
}

String.prototype.replaceAt = function (search, replace, from) {
  if (this.length > from) {
    return this.slice(0, from) + this.slice(from).replace(search, replace);
  }
  return this;
};

export default {
  config,
  onCall,
};
